version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.app
      target: runtime
    image: lane-detection-api:latest
    container_name: lane-detection-app
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=docker
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
    volumes:
      - ../config/settings.example.env:/app/config/settings.env:ro
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - lane-detection
    restart: unless-stopped

  tests:
    build:
      context: ..
      dockerfile: docker/Dockerfile.tests
      target: test-runtime
    image: lane-detection-tests:latest
    container_name: lane-detection-tests
    depends_on:
      app:
        condition: service_healthy
    environment:
      - TEST_API_BASE_URL=http://app:8000
      - ENVIRONMENT=test
      - PYTHONPATH=/app
    volumes:
      - ../test-results:/app/test-results
      - ../allure-results:/app/allure-results
    networks:
      - lane-detection
    profiles:
      - testing
    command: ["pytest", "-v", "--tb=short", "--alluredir=/app/allure-results"]

networks:
  lane-detection:
    driver: bridge

volumes:
  test-results:
  allure-results:
