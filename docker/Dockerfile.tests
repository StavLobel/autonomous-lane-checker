# Multi-stage Dockerfile for running tests
# Stage 1: Build test dependencies and install Playwright
FROM python:3.12-slim AS test-builder

# Install system dependencies for OpenCV and Playwright
RUN apt-get update && apt-get install -y \
    # OpenCV dependencies
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgl1-mesa-glx \
    # Playwright dependencies
    libnss3 \
    libnspr4 \
    libdbus-1-3 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm1 \
    libxss1 \
    libasound2 \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy and install test dependencies
COPY requirements-test.txt .
RUN pip install --no-cache-dir --user -r requirements-test.txt

# Install Playwright browsers
RUN python -m playwright install chromium

# Stage 2: Test runtime environment
FROM python:3.12-slim AS test-runtime

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    # OpenCV dependencies
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgl1-mesa-glx \
    # Playwright dependencies
    libnss3 \
    libnspr4 \
    libdbus-1-3 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm1 \
    libxss1 \
    libasound2 \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd --create-home --shell /bin/bash --uid 1001 tester

# Set working directory
WORKDIR /app

# Copy Python packages and Playwright browsers from builder
COPY --from=test-builder /root/.local /home/tester/.local
COPY --from=test-builder /root/.cache/ms-playwright /home/tester/.cache/ms-playwright

# Copy source and test code
COPY --chown=tester:tester src/ ./src/
COPY --chown=tester:tester tests/ ./tests/
COPY --chown=tester:tester config/ ./config/

# Set up Python path for user-installed packages
ENV PATH=/home/tester/.local/bin:$PATH
ENV PYTHONPATH=/app

# Switch to non-root user
USER tester

# Run tests by default
CMD ["pytest", "-v", "--tb=short", "--strict-markers"]
